
-- Function to format numbers
function format_number(number)
    local suffixes = {"", "K", "M", "B", "T", "QD"}
    local suffix_index = 1

    while math.abs(number) >= 1000 and suffix_index < #suffixes do
        number = number / 1000.0
        suffix_index = suffix_index + 1
    end

    return string.format("%.2f%s", number, suffixes[suffix_index])
end

-- Function to send a message to the webhook
local function webhookmessage(data1, link)
    local HttpService = game:GetService("HttpService")

    local response = http_request({
        Url = link,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode(data1)
    })

    print(response.Success)
end

-- Function to gather data and send the webhook message
local function tpwebhook()
    local currentworld = ""
    if game.PlaceId == 5151400895 then
        currentworld = "Bills"
    else
        currentworld = "Earth"
    end

    -- Fetch player stats
    local playerStats = game:GetService("ReplicatedStorage"):FindFirstChild("Datas"):FindFirstChild(tostring(game.Players.LocalPlayer.UserId))
    local rebirthCount = 0
    if playerStats then
        local playerRebirths = playerStats:FindFirstChild("Rebirth")
        if playerRebirths then
            rebirthCount = playerRebirths.Value
        end
    end

    local formattedRebirths = format_number(rebirthCount)
    
    -- Webhook data
    local data1 = {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "Script Logger -  " .. game.Players.LocalPlayer.Name,
            ["description"] = "\nPlayer ran script in planet **" .. currentworld .. "**" ..
                              "\nRebirths: **" .. formattedRebirths .. "**",
            ["color"] = 0000000,
            ["footer"] = {
                ["text"] = "IDEALESS SERVICES",
                ["icon_url"] = "https://media.discordapp.net/attachments/1297801848916283424/1304676240187330591/IMG_0430.jpg?ex=673041ef&is=672ef06f&hm=4ae1eec3940f520c4680ea2df1546d819bc592af5bd48780c5b0c9ce3306e281&=&format=webp&width=596&height=596"
            },
            ["thumbnail"] = {
                ["url"] = "https://media.discordapp.net/attachments/1297801848916283424/1304676240451567636/IMG_0431.jpg?ex=673041ef&is=672ef06f&hm=6ba3d2abbad1100001c5e0a1dbf1712214a6fa470a3db017edf824af2147b85f&=&format=webp&width=596&height=596"
            }
        }},
        ["username"] = "user logger",
        ["avatar_url"] = "https://media.discordapp.net/attachments/1297801848916283424/1304676240187330591/IMG_0430.jpg?ex=673041ef&is=672ef06f&hm=4ae1eec3940f520c4680ea2df1546d819bc592af5bd48780c5b0c9ce3306e281&=&format=webp&width=596&height=596",
        ["attachments"] = {}
    }

    webhookmessage(data1, "https://ptb.discord.com/api/webhooks/1297802576372301865/dqibagn7c25lWORXFNQFmT8bxhztppL2jTntwBbWtSVy2miC7JNlTQF78h6464YkQ9ga")
end

-- Execute webhook function with error handling
pcall(function() tpwebhook() end)


-- Services
local player = game.Players.LocalPlayer
local tweenService = game:GetService("TweenService")
local starterGui = game:GetService("StarterGui")
local userInputService = game:GetService("UserInputService")

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FarmGui"
screenGui.ResetOnSpawn = false  -- Make GUI persist after death
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create the Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 140.4, 0, 49.27)  -- Absolute size
frame.Position = UDim2.new(0, 885.6, 0, 115)  -- Adjusted Y position
frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)  -- Dark gray color
frame.BackgroundTransparency = 0
frame.BorderSizePixel = 0  -- Remove border for a cleaner look
frame.ZIndex = 10  -- Set a high ZIndex to stay on top
frame.Parent = screenGui

-- Create the TextButton
local textButton = Instance.new("TextButton")
textButton.Size = UDim2.new(1, 0, 1, 0)
textButton.BackgroundTransparency = 1
textButton.Text = "FARM"  -- Set text to "FARM"
textButton.Font = Enum.Font.SourceSansBold  -- Use a bold font similar to the image
textButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
textButton.TextSize = 24  -- Increase text size for prominence
textButton.TextStrokeTransparency = 1  -- No text stroke
textButton.TextTransparency = 0
textButton.AutoButtonColor = false  -- Disables button color change on click
textButton.ZIndex = 11  -- Higher than frame's ZIndex to ensure text displays on top
textButton.Parent = frame

-- Reference to the center frame (for toggling)
local centerFrame

-- Function to create, tween in, and toggle the center GUI
local function toggleCenteredGui()
    if centerFrame then
        -- Tween out and destroy the existing center frame
        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  -- 1 second duration
        local tween = tweenService:Create(centerFrame, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)})
        
        tween:Play()
        tween.Completed:Connect(function()
            centerFrame:Destroy()
            centerFrame = nil
        end)
    else
        -- Create and tween in a new center frame
        centerFrame = Instance.new("Frame")
        centerFrame.Size = UDim2.new(0, 0, 0, 0)  -- Start small in the center
        centerFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        centerFrame.AnchorPoint = Vector2.new(0.5, 0.5)  -- Center anchor point
        centerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black color
        centerFrame.BackgroundTransparency = 0
        centerFrame.BorderSizePixel = 0
        centerFrame.ZIndex = 20
        centerFrame.Parent = screenGui

        -- Add UICorner with CornerRadius of 12
        local uiCorner = Instance.new("UICorner")
        uiCorner.CornerRadius = UDim.new(0, 12)
        uiCorner.Parent = centerFrame

        -- Define the tween properties to expand the frame
        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  -- 1 second duration
        local targetSize = UDim2.new(0.5, 0, 0.5, 0)  -- Target size (50% of the screen)

        -- Create and play the tween to expand
        local tween = tweenService:Create(centerFrame, tweenInfo, {Size = targetSize})
        tween:Play()

        -- Make the center frame draggable (for both desktop and mobile)
        local dragging = false
        local dragInput, mousePos, framePos

        local function update(input)
            local delta = input.Position - mousePos
            centerFrame.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end

        centerFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                mousePos = input.Position
                framePos = centerFrame.Position

                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        centerFrame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        userInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end
end

-- Connect button press to toggleCenteredGui function
textButton.MouseButton1Click:Connect(toggleCenteredGui)
